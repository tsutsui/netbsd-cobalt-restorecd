PANELD.CONF(5)            NetBSD File Formats Manual            PANELD.CONF(5)

NNAAMMEE
     ppaanneelldd..ccoonnff -- paneld(8) configuration file

DDEESSCCRRIIPPTTIIOONN
     The ppaanneelldd..ccoonnff file is the configuration file for the paneld(8) program,
     the LCD menu daemon.

     The file essentially consists of a list of statements. There are three
     different kinds of statements, one to set various parameters, one to
     describe the menu hierarchy and one to translate device input into action
     categories that are understood by the daemon. Each statement that does
     not describe input translation or menu hierarchy must end with semi-
     colon.

GGLLOOBBAALL PPAARRAAMMEETTEERRSS
     The global parameters specify the basic daemon behavior, such as greeting
     message, key rate and so on. The following statements are available:

           ..ssttaarrtt = 'c'    Specifies a character that the device is expected
                           to generate in order to enter the main menu. Nor-
                           mally, it is assumed that the device has one or
                           more buttons each of which generates a special
                           character code.

           ..rreeppeeaatt = num   Sets the time interval, in microseconds, for the
                           auto-repeat feature. If the button is hold longer
                           than specified in this statement the new key event
                           will be generated.

           ..kkeeyyrraattee = num  Device poll rate, in microseconds. The same as 1 /
                           (maximum number of button events per second).

           ..rreessiisstt = num   If set, specifies the number of microseconds to
                           hold the button before the main menu is entered.

           ..bbaannnneerr = "command"
                           Sets the main screen contents. The daemon executes
                           an external command specified in this statement and
                           displays its output on the screen. If command fails
                           or the statement is not specified, operating system
                           name is displayed.

           ..bbaannnneerrrraattee = num
                           Sets the time (in milliseconds) that the daemon
                           will wait between executions of the command speci-
                           fied with the ".banner" directive.  The default is
                           0, which means only execute the command once.

           ..ddeevvnnaammee = "name"
                           Symbolic device name, e.g. "hd44780".

           ..ddeevvnnooddee = "node"
                           LCD device file, e.g. /dev/panel.

TTRRAANNSSLLAATTIIOONN TTAABBLLEESS
     The next set of statements is used to set the translation between device
     input and daemon actions. The translation is described by _t_r_a_n_s_l_a_t_i_o_n
     _t_a_b_l_e of the following syntax:

           ..xxttbbll = {
                 ..iidd = "translation name";
                 <translation statement #1>
                 ...
           }

     _T_r_a_n_s_l_a_t_i_o_n _n_a_m_e is use in the menu statements to ..... . The following
     translation statements may appear in the translation table:

           ..nneexxtt = 'c'     Proceed to the next menu item or to the next posi-
                           tion in the text

           ..pprreevv = 'c'     Proceed to the previous menu item or to the previ-
                           ous position in the text

           ..iinncc = 'c'      Increment the character at the current cursor posi-
                           tion (edit mode only)

           ..ddeecc = 'c'      Decrement the character at the current cursor posi-
                           tion (edit mode only)

           ..eenntteerr = 'c'    Select current menu for execution or accept edited
                           text
     Translation table may not contain all of the statements described above.
     If the statement is omitted, the corresponding event will never occur in
     the menu that uses such translation table.

MMEENNUU DDEESSCCRRIIPPTTIIOONNSS
     This is the most important part of the configuration file as it describes
     the whole daemon behavior from the users viewpoint. The current configu-
     ration syntax allows to describe a tree of menus, each of which can be
     configured to perform on of the well-defined actions including text edit-
     ing, menu browsing an so on.  In this section, menus that are defined
     inside a menu description  are said to be _c_h_i_l_d_s of thei respective par-
     ent. The syntax of menu statement is akin to that of the translation ta-
     ble, but different statements can be used inside:

           ..xxttbbll = {
                 ..iidd = "menu name";
                 <statement #1>
                 <statement #2>

                 [..mmeennuu = {
                       ...
                 }]
                 ...
           }

     The following statements are allowed in menu descriptions:

           ..iidd = "string"  Menu identifier that may be referred in a _r_e_a_d or
                           _w_r_i_t_e parameter. See also _s_e_q_u_e_n_c_e description.

           ..ttiittllee = "string"
                           Menu title, a string that will be displayed on the
                           screen when browsing. This statement can be omitted
                           in menu descriptions of type _n_o_n_e , _q_u_i_t and _e_x_i_t

           ..xxllaattee = "string"
                           Device input translation. Must name one of the
                           translation tables defined in the configuration
                           file. Omitting this parameter will essentialy make
                           a menu ignorant to a user input.

           ..ttyyppee = keyword
                           This parameter defines the menu behavior. The pos-
                           sible types are:

                           iinneett            Editor for ipv4-style addresses

                           iinneett66           Editor for ipv6-style addresses

                           tteexxtt [num]      Editor for a text field of _n_u_m
                                           length. All leading and trailing
                                           whitspaces are stripped

                           iinntt [num]       Editor for a decimal integer of _n_u_m
                                           digits. All leading zeroes are
                                           stripped out of the output

                           hheexx [num]       Editor for a hexadecimal integer of
                                           _n_u_m digits. All leading zeroes are
                                           stripped out of the output

                           ..sseelleecctt         Menu browser. Allows user to choose
                                           one of its child menus

                           ..sseeqquueennccee       Guides user through a sequence of
                                           menus.

                           ..ccoonnffiirrmm        Provides a simple confirmation dia-
                                           log. If user chooses "Yes", _w_r_i_t_e
                                           action, if specified, is executed.
                                           Also, if there are children menus
                                           the menu with idetifier "true" will
                                           be enter if user chooses "Yes", and
                                           menu with identifier "false" will
                                           be entered if user chooses "No".

                           ..eexxiitt           Returns the control to the oughter
                                           _s_e_l_e_c_t menu

                           ..qquuiitt           Instructs the daemon to terminate

                           ..nnoonnee           Forces menu to exit with a positive
                                           status

                           ..rreeaadd = "string"
                                           Read menu string. Parameter _s_t_r_i_n_g
                                           specifies an external command (and
                                           its parameters) that daemon will
                                           start before menu will take over
                                           the control flow. The external com-
                                           mand's output will be used as a
                                           menu content, i.e. it will be dis-
                                           played on the screen. This feature
                                           is intended only for editing pur-
                                           poses, so its use is limited to the
                                           menu descriptions of types _i_n_e_t ,
                                           _i_n_e_t_6 and _t_e_x_t

                           ..wwrriittee = "string"
                                           Read menu string. Parameter _s_t_r_i_n_g
                                           specifies an external command (and
                                           its parameters) that daemon will
                                           start after menu finishes its exe-
                                           cution. The main intention of this
                                           option is to provide a way to save
                                           menu content, possibly edited by a
                                           user. The _s_t_r_i_n_g argument specifies
                                           an external command and its parame-
                                           ters. If paramter starts with `$'
                                           sign, the following token will be
                                           treated as menu identifier, and the
                                           content of this menu will be used
                                           as a parameter. This allows to com-
                                           bine output of multiple menus to be
                                           processed by a single command.
                                           (Note: External command parameters
                                           may refer only to the menus that
                                           are have a direct parent of type
                                           _s_e_q_u_e_n_c_e and that preceed the ref-
                                           erencee in the declaration order.)
                                           The _w_r_i_t_e statement can appear in
                                           menu description of type _i_n_e_t ,
                                           _i_n_e_t_6 , _c_o_n_f_i_r_m , _t_e_x_t and _n_o_n_e

FFIILLEESS
     /etc/paneld.conf  The paneld(8) configuration file.

EEXXAAMMPPLLEESS
     A configuration file might appear as follows:

     # Enter menu when device generates character 'S'
     .start='S';

     # Require user to press the button for at least 1/2 seconds
     .resist=500000;

     # Generate auto-repeat event if button is pressed for more
     # that 1/2 seconds
     .repeat=500000;

     # If button is hold down, device will generate a new event each
     # 1/3 seconds
     .keyrate=300000;

     # Output of /etc/paneld/banner.sh will be used as a welcome screen
     # (NetBSD/<macharch> by default)
     .banner="/etc/paneld/banner.sh";

     # Device driver
     .devname="hd44780";

     # Device file node
     .devnode="/dev/lcd";

     # Translation table for menu browser:
     # 'S' to select next menu
     # 'E' to enter selected menu
     .xtbl = {
             .id="select";
             .next='S';
             .enter='E';
     }

     # Translation table for on-screen editor:
     # '>' to advance cursor by one position to the right
     # '<' to advance cursor by one position to the left
     # '^' to increment the character at the cursor posistion
     # 'v' to decrement the character at the cursor posistion
     # 'E' to accept edited content
     .xtbl = {
             .id="edit";
             .next='>';
             .prev='<';
             .inc='^';
             .dec='v';
             .enter='E';
     }

     .xtbl = {
             .id="choice";
             .next='>';
             .prev='<';
             .enter='E';
     }

     # Menu descriptions
     .menu = {
             # This is root menu (this id is not really used)
             .id="root";

             # This menu simply browses through its childs
             .type=select;

             # "select:" will appear on the screen
             .title="select:";

             # Translation table with id "select" will be used to
             # translate device input
             .xlate="select";

             .menu = {
                     .id="net";
                     .title="setup network";
                     .type=sequence;

                     .menu = {
                             .id="ipaddr";
                             .xlate="edit";
                             .title="primary ip addr";

                             # use output of the script as the input
                             # for editing
                             .read="/etc/paneld/ifread.sh tlp0 ipaddr";
                             .type=inet;
                     }
                     .menu = {
                             .id="ipmask";
                             .xlate="edit";
                             .title="primary netmask";
                             .read="/etc/paneld/ifread.sh tlp0 ipmask";
                             .type=inet;
                     }
                     .menu = {
                             .id="ipgw";
                             .xlate="edit";
                             .title="enter gateway";
                             .read="/etc/paneld/ifread.sh tlp0 gw";
                             .type=inet;
                     }
                     .menu = {
                             .id="save";
                             .title="save?";
                             .xlate="choice";
                             .type=confirm;

                             # Write down IP configuration. Use values entered by a
                             # user in "ipaddr", "ipmask" and "ipgw" menus
                             .write="/etc/paneld/ifwrite.sh tlp0 $ipaddr $ipmask $ipgw";

                             .menu = {
                                     # Return success if user chooses "Yes"
                                     .id="true";
                                     .type=none;
                             }
                             .menu = {
                                     # Return success if user chooses "No"
                                     .id="false";
                                     .type=none;
                             }
                     }
             }
             .menu = {
                     .title="reboot";
                     .type=sequence;

                     .menu = {
                             .title="reboot?";
                             .xlate="choice";
                             .type=confirm;
                             .write="/sbin/shutdown -r now";

                             .menu = {
                                     .id="true";
                                     # Quit daemon on reboot
                                     .type=quit;
                             }
                             .menu = {
                                     .id="false";
                                     # Do nothing if user does not want to reboot
                                     .type=none;
                             }
                     }
             }
     }

SSEEEE AALLSSOO
     paneld(8)

BBUUGGSS
     Documentation needs significant improvement.

NetBSD 5.0_RC4                   March 1, 2003                  NetBSD 5.0_RC4
